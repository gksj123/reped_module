
teq_inv(0,0)
lsrf = 0; msrf=201; map=201; nht=60
teq_inv(0,0)
read jbootstrap.bas
integer gradb = 1
real betan = 1.027738
real nebar = 4.000000
real zion = 1.000000
real zimp = 6.000000
integer ii
real width = 0.060000
real psi_mid = 1.0 - width/2.
real psi_ped = psi_mid - width/2.
real ne_peak = 1.625000
real c_nesep = 0.500000
real an0 = 1.000000
real alpha_n0 = 0.900000
real alpha_n1 = 1.800000
real ne_ped =  an0*( tanh(2.* (1.-psi_mid)/width) - tanh(2.* (psibar-psi_mid)/width))
real ne_sep = c_nesep /(1.-c_nesep) * ne_ped(1)
ne_ped = ne_ped + ne_sep
real an1 = (ne_peak-1.) * ne_ped(1)
real ne = ne_ped
integer peak_ok = 0
while (peak_ok == 0)
    do ii=1,msrf
        if ( psibar(ii) < psi_ped ) then
            ne(ii) = ne_ped(ii) + an1 * (1. - (psibar(ii)/psi_ped)**alpha_n0 )**alpha_n1
        endif
    enddo
    real ne_ave = sum(ne * vpsrf * abs(dpsi00) /msrf) / volume
    if ( abs( ne( int( msrf*0.2*0.2 ) ) /ne_ave - ne_peak ) < 0.01 ) then
        peak_ok = 1
    else
        an1 = an1 + (ne_peak - ne( int( msrf*0.2*0.2 ) )/ne_ave)
    endif
        an1
endwhile
real raxis_o = squeeze( rlsd(1,:,1) )
real raxis_i = squeeze( rlsd(map,:,1) )
real dr_i(msrf-1), dr_o(msrf-1)
do ii=1, msrf-1
    dr_i(ii) = raxis_i(ii+1) - raxis_i(ii)
    dr_o(ii) = raxis_o(ii+1) - raxis_o(ii)
enddo
real ne_bar = sum( ne(1:msrf-1) * (abs(dr_i) + abs(dr_o)) ) / rbore / 2.
ne = ne * (nebar/ne_bar)
ne_ave = ne_ave * (nebar/ne_bar)
ne_ped = ne_ped * (nebar/ne_bar)
real te_sep = 0.050000
real at0 = 4.260000
real te_ped =  te_sep + at0*( tanh(2.* (1.-psi_mid)/width) - tanh(2.* (psibar-psi_mid)/width))
real pres = ne * te_ped * 1602 * 2.
psave = pres * 10
teq_inv(0,0)
real betan_ped = ctroy
betan_ped
real at1 = 2.700000
real alpha_t0 = 1.200000
real alpha_t1 = 1.400000
real te = te_ped
integer betan_ok = 0
while ( betan_ok == 0)
    do ii=1,msrf
        if ( psibar(ii) < psi_ped ) then
            te(ii) = te_ped(ii) + at1 * (1. - (psibar(ii)/psi_ped)**alpha_t0 )**alpha_t1
        endif
    enddo
    pres = ne * te * 1602 * 2.
    psave = pres * 10
    teq_inv(0,0)
    if ( abs(betan-ctroy) < 0.01) then
        betan_ok = 1
    else
        at1 =  (betan-betan_ped)/(ctroy-betan_ped) * at1
    endif
    at1; ctroy
endwhile
real zeff(msrf)
zeff = 2.300000
real te_ave = sum(te * vpsrf * abs(dpsi00) /msrf) / volume
real nu_eff = 0.1 * zeff(1) * ne_ave * rcntr/100. / (te_ave*te_ave)
real pbeam(msrf)
pbeam  = 0.
real tee = te * 1000.
real tii = tee
real xxx = jbootstrap(pres, ne, tee, tii, zeff, pbeam, zion, zimp, gradb)
real jbs = xxx(,1)
real jbs_teqpar = jbs * 1.e-4 * frsrf(1)/rcntr /bsqrf
real jpar0 = jparsave
real placur0 = placur
real placur1 = 0.
real peak0 = max(jbs_teqpar(msrf*0.9 : msrf))
real peak1 = 0.
real c1=0.700000, c2=0.900000
while ( abs((placur0-placur1)/placur0) > 0.001 | abs(peak0-peak1)/peak0 > 0.001)
    jparsave = c1 * jpar0 + c2 *jbs_teqpar
    teq_inv(3,0)
    placur
    placur1 = placur
    peak1 = max(jparsave(msrf*0.9 : msrf))
    c1 = c1 - (placur1-placur0)/placur0
    c2 = c2 - (peak1 - peak0)/peak0
endwhile
shotName = "000039"
shotTime = 4.260000
weqdsk("t")
quit
